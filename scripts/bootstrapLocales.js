#!/usr/bin/env node
"use strict";

const fs = require("fs");
const path = require("path");

const localesDir = path.join(__dirname, "..", "locales");
const outputFile = path.join(__dirname, "locales-inline.js");

const localeMap = {};

if (!fs.existsSync(localesDir)) {
  console.error(`Locales directory not found: ${localesDir}`);
  process.exitCode = 1;
  process.exit();
}

fs.readdirSync(localesDir)
  .filter((entry) => fs.statSync(path.join(localesDir, entry)).isDirectory())
  .forEach((locale) => {
    const filePath = path.join(localesDir, locale, "common.json");
    if (!fs.existsSync(filePath)) {
      console.warn(`Skipping locale "${locale}" because ${filePath} is missing.`);
      return;
    }
    const raw = fs.readFileSync(filePath, "utf8");
    try {
      localeMap[locale] = JSON.parse(raw);
    } catch (error) {
      console.error(`Failed to parse JSON for locale "${locale}": ${error.message}`);
      process.exitCode = 1;
      process.exit();
    }
  });

const banner = `/**
 * Auto-generated by scripts/bootstrapLocales.js
 * Do not edit directlyâ€”update JSON files in /locales instead.
 */
`;

const contents = `${banner}
window.__LOCALES__ = ${JSON.stringify(localeMap, null, 2)};
`;

fs.writeFileSync(outputFile, contents, "utf8");
console.log(`Wrote inline locale bundle to ${outputFile}`);
